---
name: best_big_data_project

services:
  kafka:
    image: apache/kafka:3.8.1
    ports:
      - "9092:9091"
    healthcheck:
      test: [ "CMD-SHELL", "/opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1" ]
      interval: 1s
      timeout: 60s
      retries: 60
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9091,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  sql-database:
    image: postgres:17.0
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432" # only needed to be able to access it from outside docker
    shm_size: 128mb
    volumes: # set up shared memory for speed
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 134217728
      #      - ./postgres_data/:/var/lib/postgresql/data # uncomment to save database locally, if database is started with data, the postgres startup script is not ran
      - ./postgres_startup:/docker-entrypoint-initdb.d:z
    environment:
      POSTGRES_PASSWORD: supersecret

  data-gen:
    build: data_gen
    depends_on:
      kafka:
        condition: service_healthy
      sql-database:
        condition: service_healthy

  jobmanager:
    build: processing
    depends_on:
      - data-gen
    ports:
      - "8081:8081"
    command: standalone-job --python /opt/__main__.py
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        execution.shutdown-on-application-finish: false

  taskmanager:
    build: processing
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2

